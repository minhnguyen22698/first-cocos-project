{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","runJumpAction","jumpUp","tween","by","y","easing","jumpDown","sequence","repeatForever","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","then","start","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","update","dt","console","log","Math","abs","x"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY,CAFJ;AAGR;AACAC,sBAAc,CAJN;AAKR;AACAC,sBAAc,CANN;AAOR;AACAC,eAAO;;AARC,KAHP;;AAeLC,iBAfK,2BAeW;AACZ;AACA,YAAIC,SAASV,GAAGW,KAAH,GAAWC,EAAX,CAAc,KAAKN,YAAnB,EAAiC,EAAEO,GAAG,KAAKR,UAAV,EAAjC,EAAyD,EAAES,QAAQ,SAAV,EAAzD,CAAb;AACA;AACA,YAAIC,WAAWf,GAAGW,KAAH,GAAWC,EAAX,CAAc,KAAKN,YAAnB,EAAiC,EAAEO,GAAG,CAAC,KAAKR,UAAX,EAAjC,EAA0D,EAAES,QAAQ,QAAV,EAA1D,CAAf;;AAEA;AACA,YAAIH,QAAQX,GAAGW,KAAH,GAAWK,QAAX,CAAoBN,MAApB,EAA4BK,QAA5B,CAAZ;AACA;AACA,eAAOf,GAAGW,KAAH,GAAWM,aAAX,CAAyBN,KAAzB,CAAP;AACH,KAzBI;;;AA2BL;AACAO,aA5BK,qBA4BMC,KA5BN,EA4Ba;AACd;AACA,gBAAOA,MAAMC,OAAb;AACI,iBAAKpB,GAAGqB,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACI,qBAAKC,OAAL,GAAe,IAAf;AACA;AACJ,iBAAKxB,GAAGqB,KAAH,CAASC,GAAT,CAAaG,CAAlB;AACI,qBAAKC,QAAL,GAAgB,IAAhB;AACA;AANR;AAQH,KAtCI;AAuCLC,WAvCK,mBAuCIR,KAvCJ,EAuCW;AACZ;AACA,gBAAOA,MAAMC,OAAb;AACI,iBAAKpB,GAAGqB,KAAH,CAASC,GAAT,CAAaC,CAAlB;AACI,qBAAKC,OAAL,GAAe,KAAf;AACA;AACJ,iBAAKxB,GAAGqB,KAAH,CAASC,GAAT,CAAaG,CAAlB;AACI,qBAAKC,QAAL,GAAgB,KAAhB;AACA;AANR;AAQH,KAjDI;;;AAmDL;;AAEAE,UArDK,oBAqDI;AACL;AACA,YAAIC,aAAa,KAAKpB,aAAL,EAAjB;AACAT,WAAGW,KAAH,CAAS,KAAKmB,IAAd,EAAoBC,IAApB,CAAyBF,UAAzB,EAAqCG,KAArC;;AAEA;AACA,aAAKR,OAAL,GAAe,KAAf;AACA,aAAKE,QAAL,GAAgB,KAAhB;;AAEA,aAAKO,MAAL,GAAc,CAAd;;AAEAjC,WAAGkC,WAAH,CAAeC,EAAf,CAAkBnC,GAAGoC,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,KAAKpB,SAA1D,EAAqE,IAArE;AACAlB,WAAGkC,WAAH,CAAeC,EAAf,CAAkBnC,GAAGoC,WAAH,CAAeC,SAAf,CAAyBE,MAA3C,EAAmD,KAAKZ,OAAxD,EAAiE,IAAjE;AAGH,KApEI;AAqELa,aArEK,uBAqEQ;AACT;AACAxC,WAAGkC,WAAH,CAAeO,GAAf,CAAmBzC,GAAGoC,WAAH,CAAeC,SAAf,CAAyBC,QAA5C,EAAsD,KAAKpB,SAA3D,EAAsE,IAAtE;AACAlB,WAAGkC,WAAH,CAAeO,GAAf,CAAmBzC,GAAGoC,WAAH,CAAeC,SAAf,CAAyBE,MAA5C,EAAoD,KAAKZ,OAAzD,EAAkE,IAAlE;AACH,KAzEI;AA2ELK,SA3EK,mBA2EG,CAEP,CA7EI;;;AA+ELU,YAAQ,gBAAUC,EAAV,EAAc;AAClBC,gBAAQC,GAAR,CAAYF,EAAZ;AACA;AACA,YAAI,KAAKnB,OAAT,EAAkB;AACd,iBAAKS,MAAL,IAAe,KAAKzB,KAAL,GAAamC,EAA5B;AACH,SAFD,MAEO,IAAI,KAAKjB,QAAT,EAAmB;AACtB,iBAAKO,MAAL,IAAe,KAAKzB,KAAL,GAAamC,EAA5B;AACH;AACD;AACA,YAAKG,KAAKC,GAAL,CAAS,KAAKd,MAAd,IAAwB,KAAK1B,YAAlC,EAAiD;AAC7C;AACA,iBAAK0B,MAAL,GAAc,KAAK1B,YAAL,GAAoB,KAAK0B,MAAzB,GAAkCa,KAAKC,GAAL,CAAS,KAAKd,MAAd,CAAhD;AACH;;AAED;AACA,aAAKH,IAAL,CAAUkB,CAAV,IAAe,KAAKf,MAAL,GAAcU,EAA7B;AACH;AA/FI,CAAT","file":"Player.js","sourceRoot":"../../../../../assets/textures/scripts","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // Main character's jump height\n        jumpHeight: 0,\n        // Main character's jump duration\n        jumpDuration: 0,\n        // Maximal movement speed\n        maxMoveSpeed: 0,\n        // Acceleration\n        accel: 0,\n\n    },\n\n    runJumpAction() {\n        // Jump up\n        var jumpUp = cc.tween().by(this.jumpDuration, { y: this.jumpHeight }, { easing: 'sineOut' });\n        // Jump down\n        var jumpDown = cc.tween().by(this.jumpDuration, { y: -this.jumpHeight }, { easing: 'sineIn' });\n\n        // Create a easing and perform actions in the order of \"jumpUp\", \"jumpDown\"\n        var tween = cc.tween().sequence(jumpUp, jumpDown);\n        // Repeat\n        return cc.tween().repeatForever(tween);\n    },\n\n    //Player move\n    onKeyDown (event) {\n        // Set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },\n    onKeyUp (event) {\n        // Unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        //Khoi tao jump\n        var jumpAction = this.runJumpAction();\n        cc.tween(this.node).then(jumpAction).start()\n\n        //Khoi tao huong chuyen doi\n        this.accLeft = false;\n        this.accRight = false;\n\n        this.xSpeed = 0;\n\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n\n\n    },\n    onDestroy () {\n        // Cancel keyboard input monitoring\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    start() {\n\n    },\n\n    update: function (dt) {\n        console.log(dt)\n        // Update speed of each frame according to the current acceleration direction\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // Restrict the movement speed of the main character to the maximum movement speed\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // If speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // Update the position of the main character according to the current speed\n        this.node.x += this.xSpeed * dt;\n    },\n});\n"]}